
 /********UNIVERSITY OF MANCHESTER SCHOOL OF EE&E*****************/
 /*********FOURTH YEAR PROJECT: ROBOT ORCHESTRA*******************/
  /******************SOUNDBYTES***********************************/
 
/*Test code for stepper motors playing Happy Birthday with AD9837 chip
 and A4988 motor driver board
 */

/*CONNECTIONS:
 * DRIVER(A4988)       ARDUINO       STEPPER
 * 2A                                motor coil 2
 * 1A                                motor coil 1
 * 2B                                motor coil 2
 * 1B                                motor coil 2
 * Vdd                +5V
 * GND                GND
 * STEP               3
 * DIRECTION          4
 * MS1                disconnected
 * MS2                disconnected
 * MS3                7
 * SLEEP-RST
 * ENABLE             8
 * 
 * 
 * AD9837 CHIP
 * 5V                 5V
 * DG                 GND
 * 3V                 3V3 
 * SDA                pin 11
 * CS                 pin 13
 * SCK                pin 10
 * OUT                STEP pin of A4988 (if not using the AD9837, 
 *                                       connect this pin to pin 3)
 * Ag                 left disconnected
 * 
 * note: the pins of "SCK" and "CS" are reversed on the PCB. 
 * The connections above account for this switch between the pins as well.
 * 
 */



#include <SPI.h>
#include <SparkFun_MiniGen.h>

MiniGen gen;

#define DIR  4
#define EN   8
#define STEP 3
#define MS1  5
#define MS2  6
#define MS3  7

#define STEP2 8
#define DIR2 9

#define on 1
#define off 0

//frequency of notes in Hz
#define C0  16.35
#define C0s 17.32
#define D0  18.35
#define D0s 19.45
#define E0  20.60
#define F0  21.83
#define F0s 23.12
#define G0  24.50
#define G0s 25.96
#define A0  27.50
#define A0s 29.14
#define B0  30.87
#define C1  32.70
#define C1s 34.65
#define D1  36.71
#define D1s 38.89
#define E1  41.2
#define F1  43.65
#define F1s 46.25
#define G1  49
#define G1s 51.91
#define A1  55
#define A1s 58.27
#define B1  61.74
#define C2  65.41
#define C2s 69.3
#define D2  73.42
#define D2s 77.78
#define E2  82.41
#define F2  87.31
#define F2s 92.5
#define G2  98
#define G2s 103.83
#define A2  110
#define A2s 116.54
#define B2  123.47
#define C3  130.81
#define C3s 138.59
#define D3  146.83
#define D3s 155.56
#define E3  164.81
#define F3  174.61
#define F3s 185
#define G3  196
#define G3s 207.65
#define A3  220
#define A3s 233.08
#define B3  246.94
#define C4  261.63
#define C4s 277.18
#define D4  293.66
#define D4s 311.13
#define E4  329.63
#define F4  349.23
#define F4s 369.99
#define G4  392
#define G4s 415.3
#define A4  440
#define A4s 466.16
#define B4  493.88
#define C5  523.25
#define C5s 554.37
#define D5  587.33
#define D5s 622.25
#define E5  659.25
#define F5  698.46
#define F5s 739.99
#define G5  783.99
#define G5s 830.61
#define A5  880
#define A5s 932.33
#define B5  987.77
#define C6  1046.5
#define C6s 1108.73
#define D6  1174.66
#define D6s 1244.51
#define E6  1318.51
#define F6  1396.91
#define F6s 1479.98
#define G6  1567.98
#define G6s 1661.22
#define A6  1760
#define A6s 1864.66
#define B6  1975.53
#define C7  2093
#define C7s 2217.46
#define D7  2349.32
#define D7s 2489.02
#define E7  2637.02
#define F7  2793.83
#define F7s 2959.96
#define G7  3135.96
#define G7s 3322.44
#define A7  3520
#define A7s 3729.31
#define B7  3951.07
#define C8  4186.01
#define C8s 4434.92
#define D8  4698.63
#define D8s 4978.03
#define E8  5274.04
#define F8  5587.65
#define F8s 5919.91
#define G8  6271.93
#define G8s 6644.88
#define A8  7040
#define A8s 7458.62
#define B8  7902.13




//GAME OF THRONES THEME (beginning of song only)

float noteArray[] = {
E4, A5, C5, D5,
E4, A5, C5, D5,
E4, A5, C5, D5,
E4, A5, C5, D5,

E4, A5, C5s, D5,
E4, A5, C5s, D5,
E4, A5, C5s, D5,
E4, A5, C5s, D5,

E4, A5, C5, D5,
E4, A5, C5, D5,

B4, E4, G4, A4,
B4, E4, G4, A4,
B4, E4, G4, A4,
B4, E4, G4, A4,  

D5,G4,C5,B4,
D5,G4,C5,B4,

A4,D4,F4,G4,
A4,D4,F4,G4,
A4,D4,F4,G4,
A4,D4,F4,G4,

E5, A4, C5, D5,
E5, A4, C5, D5

        
};


float noteTime[] = {
0.3, 0.3, 0.15, 0.15,
0.3, 0.3, 0.15, 0.15,
0.3, 0.3, 0.15, 0.15,
0.3, 0.3, 0.15, 0.15,

0.3, 0.3, 0.15, 0.15,
0.3, 0.3, 0.15, 0.15,
0.3, 0.3, 0.15, 0.15,
0.3, 0.3, 0.15, 0.15,

0.89, 0.89, 0.15, 0.15,
0.6, 0.6, 0.15, 0.15,

0.3, 0.3, 0.15, 0.15,
0.3, 0.3, 0.15, 0.15,
0.3, 0.3, 0.15, 0.15,
0.3, 0.3, 0.15, 0.15,

0.89,0.89,0.15,0.15,
0.6, 0.6, 0.15, 0.15,

0.3, 0.3, 0.15, 0.15,
0.3, 0.3, 0.15, 0.15,
0.3, 0.3, 0.15, 0.15,
0.3, 0.3, 0.15, 0.15,

0.89, 0.89, 0.15, 0.15,
0.6, 0.6, 0.15, 0.15,


};





 
void setup() {

  gen.reset(); //reset to default state
  delay(1000);

  
pinMode(DIR,OUTPUT);
pinMode(EN,OUTPUT);
pinMode(STEP,OUTPUT);
pinMode(MS1,OUTPUT);
pinMode(MS2,OUTPUT);
pinMode(MS3,OUTPUT);

pinMode(DIR2,OUTPUT);
pinMode(STEP2,OUTPUT);

Serial.begin(9600);
Serial.println("Starting...");

digitalWrite(EN,LOW); //enable the driver

//full step 0,0,0
//truth table in datasheet
digitalWrite(MS1,LOW);
digitalWrite(MS2,LOW);
digitalWrite(MS3,LOW);
digitalWrite(DIR,HIGH);

digitalWrite(DIR2,HIGH);

 gen.setMode(MiniGen::SQUARE);  //square wave generator  
 gen.setFreqAdjustMode(MiniGen::FULL); //set frequency with repect to clock
  
}


void loop() {


for(int i=0;i<(sizeof(noteArray)/sizeof(float));i++){
  unsigned long Time=millis();

  Serial.println("millis() is: ");
  Serial.println(millis());
  
  Serial.println("noteTime is: ");
  Serial.println(noteTime[i]*1E3);
  
  while((millis()-Time)<(noteTime[i]*1E3)){  //play notes
        Serial.println("Playing note");
    Serial.println(noteArray[i]);
    note(noteArray[i]); 
  
  }
 }
}

/*
for (length of note_status)

delay(time corresponding to the time array)
  if(note_status == on)
    //do the following as fast as possible, no additional delays
    Set the frequency of the steppers 
    Turn the steppers on so they play the music 
  if (note_status==off)
    Turn the dss off
*/



void note(float freq){
  
  float frequency = freq;
  unsigned long freqReg = gen.freqCalc(frequency);
  gen.adjustFreq(MiniGen::FREQ0, freqReg);

  Serial.println("Trying to play frequency");
  Serial.println(frequency);  

}
